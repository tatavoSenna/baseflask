AWSTemplateFormatVersion: 2010-09-09

Parameters:
    # AppDomainName:
    #     Type: String
    # AppCertificate:
    #     Type: String
    AppBucketName:
        Type: String

Resources:

    AppCloudFrontOAI:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties: 
            CloudFrontOriginAccessIdentityConfig: 
                Comment: "App S3 access"

    AppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: !Ref AppBucketName
        PublicAccessBlockConfiguration: 
            BlockPublicAcls: true
            BlockPublicPolicy: true
            IgnorePublicAcls: true
            RestrictPublicBuckets: true

    AppBucketPolicy:
        Type: 'AWS::S3::BucketPolicy'
        Properties:
            Bucket: !Ref AppBucket
            PolicyDocument:
                Statement:
                    - 
                        Action:
                            - 's3:GetObject'
                        Principal:
                            CanonicalUser: !GetAtt AppCloudFrontOAI.S3CanonicalUserId
                        Effect: Allow
                        Resource: !Join
                            - ''
                            - 
                                - 'arn:aws:s3:::'
                                - !Ref AppBucket
                                - /*


    Distribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                # Aliases: 
                #     - !Ref AppDomainName
                Origins:
                    - 
                        # Use the Website as the CDN origin
                        DomainName: !GetAtt AppBucket.DomainName
                        Id: !Ref AppBucket
                        S3OriginConfig:
                            OriginAccessIdentity:
                                !Sub 'origin-access-identity/cloudfront/${AppCloudFrontOAI}'
                CustomErrorResponses:
                    - 
                        ErrorCode: 403
                        ResponseCode: 200
                        ResponsePagePath: /index.html
                Enabled: true
                DefaultRootObject: index.html
            ## Since the Single Page App is taking care of the routing we need to make sure ever path is served with index.html
            # Configure the caching behavior for our CDN
                # ViewerCertificate:
                #     AcmCertificateArn:  !Ref AppCertificate
                #     SslSupportMethod: sni-only
                DefaultCacheBehavior: 
                    AllowedMethods:
                    - GET
                    - HEAD
                    - OPTIONS
                    MinTTL: 86400  # 1 day
                    MaxTTL: 31536000  # 1 year
                    ForwardedValues: 
                        QueryString: true
                        Cookies:
                            Forward: none
                    ## The origin id defined above
                    TargetOriginId: !Ref AppBucket
                    ViewerProtocolPolicy: "redirect-to-https"   # we want to force HTTPS
                ## The certificate to use when viewers use HTTPS to request objects.
            

Outputs:
    CloudFrontDistribution:
        Value: !Ref Distribution
    WebsiteBucket:
        Value: !Ref AppBucket
    AppCloudFrontOAI:
        Value: !GetAtt AppCloudFrontOAI.S3CanonicalUserId
    
