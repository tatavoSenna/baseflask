AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Cluster:
    Type: String

  DesiredCount:
    Type: Number
    Default: 1

  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2

  TargetGroup:
    Type: String

  SourceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

  DatabaseConnectionString:
    Type: String

  AppDomainName:
    Type: String
    Description: The front end domain. The api needs this to build the callback url to the cognito hosted ui

  ApiDomainName:
    Type: String
    Description: The api domain. The api needs this to build the callback url to the cognito hosted ui

  CognitoUserPool:
    Type: String
    Description: The user pool the api will use for authentication

  CognitoUserPoolDomain:
    Type: String
    Description: The Cognito hosted ui domain basename. The api needs it to build the hosted ui domain.

  UserPoolClient:
    Type: String
    Description: The user pool app client

  DocumentsBucket:
    Type: String

  FlaskSecretKey:
    Type: String

  SendGridApiKey:
    Type: String

  ConvertApiSecretKey:
    Type: String

  D4SignApiURL:
    Type: String

  StripeApiSecretKey:
    Type: String

  EnvironmentTag:
    Type: String
    Description: The tag used to differentiate between develop and production environments on sentry.

  BackEndSentryDSN:
    Type: String
    Description: Sentry api key for the backend.

Conditions:
  Fargate: !Equals [!Ref LaunchType, "Fargate"]

  EC2: !Equals [!Ref LaunchType, "EC2"]

Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      Policies:
        - PolicyName: accesstasks3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${DocumentsBucket}/*
                  - !Sub arn:aws:s3:::${DocumentsBucket}
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
              - Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}
                Effect: Allow
                Action:
                  - cognito-idp:*
              - Resource: !ImportValue SNSNewDocumentARN
                Effect: Allow
                Action:
                  - sns:Publish

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}

  FargateService:
    Type: AWS::ECS::Service
    Condition: Fargate
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SourceSecurityGroup
          Subnets: !Ref Subnets
      LoadBalancers:
        - ContainerName: lawing-api
          ContainerPort: 5000
          TargetGroupArn: !Ref TargetGroup

  EC2Service:
    Type: AWS::ECS::Service
    Condition: EC2
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: lawing-api
          ContainerPort: 5000
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-lawing-api
      RequiresCompatibilities:
        - !If [Fargate, "FARGATE", "EC2"]
      Memory: 512
      Cpu: 256
      NetworkMode: !If [Fargate, "awsvpc", "bridge"]
      ExecutionRoleArn: !Ref TaskExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: lawing-api
          Image: 386235651823.dkr.ecr.sa-east-1.amazonaws.com/prod:4e6075c8
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName
          Environment:
            - Name: AWS_COGNITO_DOMAIN
              Value: !Join
                - ""
                - - "https://"
                  - !Ref CognitoUserPoolDomain
                  - "-lawing.auth."
                  - !Ref AWS::Region
                  - ".amazoncognito.com"
            - Name: AWS_COGNITO_USER_POOL_ID
              Value: !Ref CognitoUserPool
            - Name: AWS_COGNITO_USER_POOL_CLIENT_ID
              Value: !Ref UserPoolClient
            - Name: SQLALCHEMY_TRACK_MODIFICATIONS
              Value: "False"
            - Name: SECRET_KEY
              Value: !Ref FlaskSecretKey
            - Name: SQLALCHEMY_DATABASE_URI
              Value: !Ref DatabaseConnectionString
            - Name: DOCUSIGN_OAUTH_URI
              Value: https://account.docusign.com/oauth
            - Name: DOCUSIGN_WEBHOOK_URL
              Value: !Sub "${ApiDomainName}/docusign/signed"
            - Name: AWS_S3_DOCUMENTS_BUCKET
              Value: !Ref DocumentsBucket
            - Name: CONVERTAPI_SECRET_KEY
              Value: !Ref ConvertApiSecretKey
            - Name: SENDGRID_API_KEY
              Value: !Ref SendGridApiKey
            - Name: SNS_NEWDOCUMENT_ARN
              Value: !ImportValue SNSNewDocumentARN
            - Name: D4SIGN_API_URL
              Value: !Ref D4SignApiURL
            - Name: D4SIGN_API_DOCUMENT_WEBHOOK_URL
              Value: !Sub "https://${ApiDomainName}/d4sign/document-webhook"
            - Name: STRIPE_API_SECRET_KEY
              Value: !Ref StripeApiSecretKey
            - Name: DOMAIN_URL
              Value: !Ref AppDomainName
            - Name: ENVIRONMENT_TAG
              Value: !Ref EnvironmentTag
            - Name: SENTRY_DSN
              Value: !Ref BackEndSentryDSN
          PortMappings:
            - ContainerPort: 5000
              HostPort: 5000
              Protocol: tcp
      Volumes:
        - Name: my-vol

Outputs:
  Service:
    Value: !If [Fargate, !Ref FargateService, !Ref EC2Service]
