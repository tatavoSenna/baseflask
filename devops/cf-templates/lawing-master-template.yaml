---
AWSTemplateFormatVersion: 2010-09-09


Description: >
  lawing api infrastructure and ci.


Parameters:
  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2
    Description: >
      The launch type for your service. Selecting EC2 will create an Auto
      Scaling group of t2.micro instances for your cluster. See
      https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html
      to learn more about launch types.

  AppDomainName:
    Type: String
    Description: >
      The url to access the app. I will be included as an alternative domain name in Cloudfront Distribution.

  DBName:
    Description: The database name
    Default: lawingdb
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUser:
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  GitHubUser:
    Type: String
    Description: The repository owner.
    Default: parafernalia

  GitHubRepo:
    Type: String
    Default: lawing
    Description: The repo name of the lawing service.

  GitHubBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.

  GitHubToken:
    Type: String
    NoEcho: true
    Description: >
      Token for the user specified above. (https://github.com/settings/tokens)

  TemplateBucket:
    Type: String
    Default: lawing-cloudformation-template
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.


Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: "User"
      GitHubRepo:
        default: "Repo"
      GitHubBranch:
        default: "Branch"
      GitHubToken:
        default: "Personal Access Token"
      LaunchType:
        default: "Launch Type"
      DBName:
        default: "Nome do banco de dados"
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - LaunchType
      - Label:
          default: Database
        Parameters:
          - DBName
          - DBUser
          - DBPassword
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken
      - Label:
          default: Stack Configuration
        Parameters:
          - TemplateBucket

Resources:

  UserPool:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/cognito.yaml"
      Parameters:
        AuthName: !Ref AWS::StackName
        AppDomainName: !Ref AppDomainName
        CognitoUserPoolDomain: !Ref AWS::StackName


  Database:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/rds-postgres.yaml"
      Parameters:
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/ecs-cluster.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/deployment-pipeline.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        Service: !GetAtt Service.Outputs.Service
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        RepositoryName: !Ref AWS::StackName

  DeploymentPipelineFront:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/deployment-pipeline-front.yaml"
      Parameters:
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        AppBucket: !GetAtt CloudFront.Outputs.AppBucket
        CloudFrontDistribution: !GetAtt CloudFront.Outputs.CloudFrontDistribution
        AppDomainName: !Ref AppDomainName

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/load-balancer.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/vpc.yaml"
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        Subnet1CIDR: 10.215.10.0/24
        Subnet2CIDR: 10.215.20.0/24

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/service.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        LaunchType: !Ref LaunchType
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        DatabaseConnectionString: !GetAtt Database.Outputs.DatabaseURI
        CognitoUserPoolDomain: !Ref AWS::StackName

  CloudFront:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/cloudfront.yaml"
      Parameters:
        AppDomainName: !Ref AppDomainName
